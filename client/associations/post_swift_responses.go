// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostSwiftReader is a Reader for the PostSwift structure.
type PostSwiftReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostSwiftReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostSwiftCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostSwiftBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostSwiftForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostSwiftConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostSwiftCreated creates a PostSwiftCreated with default headers values
func NewPostSwiftCreated() *PostSwiftCreated {
	return &PostSwiftCreated{}
}

/*PostSwiftCreated handles this case with default header values.

creation response
*/
type PostSwiftCreated struct {
	Payload *models.SwiftAssociationCreationResponse
}

func (o *PostSwiftCreated) Error() string {
	return fmt.Sprintf("[POST /swift][%d] postSwiftCreated  %+v", 201, o.Payload)
}

func (o *PostSwiftCreated) GetPayload() *models.SwiftAssociationCreationResponse {
	return o.Payload
}

func (o *PostSwiftCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.SwiftAssociationCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSwiftBadRequest creates a PostSwiftBadRequest with default headers values
func NewPostSwiftBadRequest() *PostSwiftBadRequest {
	return &PostSwiftBadRequest{}
}

/*PostSwiftBadRequest handles this case with default header values.

Bad Request
*/
type PostSwiftBadRequest struct {
	Payload *models.APIError
}

func (o *PostSwiftBadRequest) Error() string {
	return fmt.Sprintf("[POST /swift][%d] postSwiftBadRequest  %+v", 400, o.Payload)
}

func (o *PostSwiftBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostSwiftBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSwiftForbidden creates a PostSwiftForbidden with default headers values
func NewPostSwiftForbidden() *PostSwiftForbidden {
	return &PostSwiftForbidden{}
}

/*PostSwiftForbidden handles this case with default header values.

Forbidden
*/
type PostSwiftForbidden struct {
	Payload *models.APIError
}

func (o *PostSwiftForbidden) Error() string {
	return fmt.Sprintf("[POST /swift][%d] postSwiftForbidden  %+v", 403, o.Payload)
}

func (o *PostSwiftForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostSwiftForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostSwiftConflict creates a PostSwiftConflict with default headers values
func NewPostSwiftConflict() *PostSwiftConflict {
	return &PostSwiftConflict{}
}

/*PostSwiftConflict handles this case with default header values.

Conflict
*/
type PostSwiftConflict struct {
	Payload *models.APIError
}

func (o *PostSwiftConflict) Error() string {
	return fmt.Sprintf("[POST /swift][%d] postSwiftConflict  %+v", 409, o.Payload)
}

func (o *PostSwiftConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostSwiftConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
