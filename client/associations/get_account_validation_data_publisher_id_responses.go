// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// GetAccountValidationDataPublisherIDReader is a Reader for the GetAccountValidationDataPublisherID structure.
type GetAccountValidationDataPublisherIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountValidationDataPublisherIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAccountValidationDataPublisherIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAccountValidationDataPublisherIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAccountValidationDataPublisherIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAccountValidationDataPublisherIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountValidationDataPublisherIDOK creates a GetAccountValidationDataPublisherIDOK with default headers values
func NewGetAccountValidationDataPublisherIDOK() *GetAccountValidationDataPublisherIDOK {
	return &GetAccountValidationDataPublisherIDOK{}
}

/*GetAccountValidationDataPublisherIDOK handles this case with default header values.

Associations details
*/
type GetAccountValidationDataPublisherIDOK struct {
	Payload *models.AccountValidationDataPublisherAssociationDetailsResponse
}

func (o *GetAccountValidationDataPublisherIDOK) Error() string {
	return fmt.Sprintf("[GET /account-validation-data-publisher/{id}][%d] getAccountValidationDataPublisherIdOK  %+v", 200, o.Payload)
}

func (o *GetAccountValidationDataPublisherIDOK) GetPayload() *models.AccountValidationDataPublisherAssociationDetailsResponse {
	return o.Payload
}

func (o *GetAccountValidationDataPublisherIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountValidationDataPublisherAssociationDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountValidationDataPublisherIDBadRequest creates a GetAccountValidationDataPublisherIDBadRequest with default headers values
func NewGetAccountValidationDataPublisherIDBadRequest() *GetAccountValidationDataPublisherIDBadRequest {
	return &GetAccountValidationDataPublisherIDBadRequest{}
}

/*GetAccountValidationDataPublisherIDBadRequest handles this case with default header values.

Bad Request
*/
type GetAccountValidationDataPublisherIDBadRequest struct {
	Payload *models.APIError
}

func (o *GetAccountValidationDataPublisherIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /account-validation-data-publisher/{id}][%d] getAccountValidationDataPublisherIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountValidationDataPublisherIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAccountValidationDataPublisherIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountValidationDataPublisherIDForbidden creates a GetAccountValidationDataPublisherIDForbidden with default headers values
func NewGetAccountValidationDataPublisherIDForbidden() *GetAccountValidationDataPublisherIDForbidden {
	return &GetAccountValidationDataPublisherIDForbidden{}
}

/*GetAccountValidationDataPublisherIDForbidden handles this case with default header values.

Forbidden
*/
type GetAccountValidationDataPublisherIDForbidden struct {
	Payload *models.APIError
}

func (o *GetAccountValidationDataPublisherIDForbidden) Error() string {
	return fmt.Sprintf("[GET /account-validation-data-publisher/{id}][%d] getAccountValidationDataPublisherIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountValidationDataPublisherIDForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAccountValidationDataPublisherIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountValidationDataPublisherIDNotFound creates a GetAccountValidationDataPublisherIDNotFound with default headers values
func NewGetAccountValidationDataPublisherIDNotFound() *GetAccountValidationDataPublisherIDNotFound {
	return &GetAccountValidationDataPublisherIDNotFound{}
}

/*GetAccountValidationDataPublisherIDNotFound handles this case with default header values.

Not Found
*/
type GetAccountValidationDataPublisherIDNotFound struct {
	Payload *models.APIError
}

func (o *GetAccountValidationDataPublisherIDNotFound) Error() string {
	return fmt.Sprintf("[GET /account-validation-data-publisher/{id}][%d] getAccountValidationDataPublisherIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountValidationDataPublisherIDNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAccountValidationDataPublisherIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
