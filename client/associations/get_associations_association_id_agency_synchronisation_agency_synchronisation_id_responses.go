// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDReader is a Reader for the GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationID structure.
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK handles this case with default header values.

LHV Agency synchronisation details
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK struct {
	Payload *models.LhvAgencySynchronisationResponse
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdOK  %+v", 200, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK) GetPayload() *models.LhvAgencySynchronisationResponse {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.LhvAgencySynchronisationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest handles this case with default header values.

Bad Request
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdBadRequest  %+v", 400, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden handles this case with default header values.

Forbidden
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdForbidden  %+v", 403, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound handles this case with default header values.

Record not found
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdNotFound  %+v", 404, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict handles this case with default header values.

Conflict
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdConflict  %+v", 409, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests handles this case with default header values.

The request cannot be served due to the application’s rate limit
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable creates a GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable with default headers values
func NewGetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable() *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable {
	return &GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable{}
}

/*GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /associations/{associationId}/agency_synchronisation/{agencySynchronisationId}][%d] getAssociationsAssociationIdAgencySynchronisationAgencySynchronisationIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
