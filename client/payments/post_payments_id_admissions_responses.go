// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostPaymentsIDAdmissionsReader is a Reader for the PostPaymentsIDAdmissions structure.
type PostPaymentsIDAdmissionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostPaymentsIDAdmissionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostPaymentsIDAdmissionsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostPaymentsIDAdmissionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostPaymentsIDAdmissionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostPaymentsIDAdmissionsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostPaymentsIDAdmissionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostPaymentsIDAdmissionsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostPaymentsIDAdmissionsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostPaymentsIDAdmissionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostPaymentsIDAdmissionsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostPaymentsIDAdmissionsCreated creates a PostPaymentsIDAdmissionsCreated with default headers values
func NewPostPaymentsIDAdmissionsCreated() *PostPaymentsIDAdmissionsCreated {
	return &PostPaymentsIDAdmissionsCreated{}
}

/* PostPaymentsIDAdmissionsCreated describes a response with status code 201, with default header values.

Admission creation response
*/
type PostPaymentsIDAdmissionsCreated struct {
	Payload *models.PaymentAdmissionCreationResponse
}

func (o *PostPaymentsIDAdmissionsCreated) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsCreated  %+v", 201, o.Payload)
}
func (o *PostPaymentsIDAdmissionsCreated) GetPayload() *models.PaymentAdmissionCreationResponse {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.PaymentAdmissionCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsBadRequest creates a PostPaymentsIDAdmissionsBadRequest with default headers values
func NewPostPaymentsIDAdmissionsBadRequest() *PostPaymentsIDAdmissionsBadRequest {
	return &PostPaymentsIDAdmissionsBadRequest{}
}

/* PostPaymentsIDAdmissionsBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostPaymentsIDAdmissionsBadRequest struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsBadRequest) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsBadRequest  %+v", 400, o.Payload)
}
func (o *PostPaymentsIDAdmissionsBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsUnauthorized creates a PostPaymentsIDAdmissionsUnauthorized with default headers values
func NewPostPaymentsIDAdmissionsUnauthorized() *PostPaymentsIDAdmissionsUnauthorized {
	return &PostPaymentsIDAdmissionsUnauthorized{}
}

/* PostPaymentsIDAdmissionsUnauthorized describes a response with status code 401, with default header values.

Authentication credentials were missing or incorrect
*/
type PostPaymentsIDAdmissionsUnauthorized struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsUnauthorized  %+v", 401, o.Payload)
}
func (o *PostPaymentsIDAdmissionsUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsForbidden creates a PostPaymentsIDAdmissionsForbidden with default headers values
func NewPostPaymentsIDAdmissionsForbidden() *PostPaymentsIDAdmissionsForbidden {
	return &PostPaymentsIDAdmissionsForbidden{}
}

/* PostPaymentsIDAdmissionsForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostPaymentsIDAdmissionsForbidden struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsForbidden) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsForbidden  %+v", 403, o.Payload)
}
func (o *PostPaymentsIDAdmissionsForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsNotFound creates a PostPaymentsIDAdmissionsNotFound with default headers values
func NewPostPaymentsIDAdmissionsNotFound() *PostPaymentsIDAdmissionsNotFound {
	return &PostPaymentsIDAdmissionsNotFound{}
}

/* PostPaymentsIDAdmissionsNotFound describes a response with status code 404, with default header values.

Record not found
*/
type PostPaymentsIDAdmissionsNotFound struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsNotFound) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsNotFound  %+v", 404, o.Payload)
}
func (o *PostPaymentsIDAdmissionsNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsConflict creates a PostPaymentsIDAdmissionsConflict with default headers values
func NewPostPaymentsIDAdmissionsConflict() *PostPaymentsIDAdmissionsConflict {
	return &PostPaymentsIDAdmissionsConflict{}
}

/* PostPaymentsIDAdmissionsConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostPaymentsIDAdmissionsConflict struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsConflict) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsConflict  %+v", 409, o.Payload)
}
func (o *PostPaymentsIDAdmissionsConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsTooManyRequests creates a PostPaymentsIDAdmissionsTooManyRequests with default headers values
func NewPostPaymentsIDAdmissionsTooManyRequests() *PostPaymentsIDAdmissionsTooManyRequests {
	return &PostPaymentsIDAdmissionsTooManyRequests{}
}

/* PostPaymentsIDAdmissionsTooManyRequests describes a response with status code 429, with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type PostPaymentsIDAdmissionsTooManyRequests struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsTooManyRequests  %+v", 429, o.Payload)
}
func (o *PostPaymentsIDAdmissionsTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsInternalServerError creates a PostPaymentsIDAdmissionsInternalServerError with default headers values
func NewPostPaymentsIDAdmissionsInternalServerError() *PostPaymentsIDAdmissionsInternalServerError {
	return &PostPaymentsIDAdmissionsInternalServerError{}
}

/* PostPaymentsIDAdmissionsInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostPaymentsIDAdmissionsInternalServerError struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsInternalServerError  %+v", 500, o.Payload)
}
func (o *PostPaymentsIDAdmissionsInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostPaymentsIDAdmissionsServiceUnavailable creates a PostPaymentsIDAdmissionsServiceUnavailable with default headers values
func NewPostPaymentsIDAdmissionsServiceUnavailable() *PostPaymentsIDAdmissionsServiceUnavailable {
	return &PostPaymentsIDAdmissionsServiceUnavailable{}
}

/* PostPaymentsIDAdmissionsServiceUnavailable describes a response with status code 503, with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type PostPaymentsIDAdmissionsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *PostPaymentsIDAdmissionsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /payments/{id}/admissions][%d] postPaymentsIdAdmissionsServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostPaymentsIDAdmissionsServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostPaymentsIDAdmissionsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
