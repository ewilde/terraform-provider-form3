// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech-oss/terraform-provider-form3/models"
)

// DeleteSepasctIDReader is a Reader for the DeleteSepasctID structure.
type DeleteSepasctIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSepasctIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSepasctIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewDeleteSepasctIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewDeleteSepasctIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewDeleteSepasctIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSepasctIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewDeleteSepasctIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewDeleteSepasctIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteSepasctIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewDeleteSepasctIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSepasctIDNoContent creates a DeleteSepasctIDNoContent with default headers values
func NewDeleteSepasctIDNoContent() *DeleteSepasctIDNoContent {
	return &DeleteSepasctIDNoContent{}
}

/*DeleteSepasctIDNoContent handles this case with default header values.

Association deleted
*/
type DeleteSepasctIDNoContent struct {
}

func (o *DeleteSepasctIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdNoContent ", 204)
}

func (o *DeleteSepasctIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSepasctIDBadRequest creates a DeleteSepasctIDBadRequest with default headers values
func NewDeleteSepasctIDBadRequest() *DeleteSepasctIDBadRequest {
	return &DeleteSepasctIDBadRequest{}
}

/*DeleteSepasctIDBadRequest handles this case with default header values.

Bad Request
*/
type DeleteSepasctIDBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteSepasctIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDUnauthorized creates a DeleteSepasctIDUnauthorized with default headers values
func NewDeleteSepasctIDUnauthorized() *DeleteSepasctIDUnauthorized {
	return &DeleteSepasctIDUnauthorized{}
}

/*DeleteSepasctIDUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type DeleteSepasctIDUnauthorized struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteSepasctIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDForbidden creates a DeleteSepasctIDForbidden with default headers values
func NewDeleteSepasctIDForbidden() *DeleteSepasctIDForbidden {
	return &DeleteSepasctIDForbidden{}
}

/*DeleteSepasctIDForbidden handles this case with default header values.

Forbidden
*/
type DeleteSepasctIDForbidden struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdForbidden  %+v", 403, o.Payload)
}

func (o *DeleteSepasctIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDNotFound creates a DeleteSepasctIDNotFound with default headers values
func NewDeleteSepasctIDNotFound() *DeleteSepasctIDNotFound {
	return &DeleteSepasctIDNotFound{}
}

/*DeleteSepasctIDNotFound handles this case with default header values.

Record not found
*/
type DeleteSepasctIDNotFound struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdNotFound  %+v", 404, o.Payload)
}

func (o *DeleteSepasctIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDConflict creates a DeleteSepasctIDConflict with default headers values
func NewDeleteSepasctIDConflict() *DeleteSepasctIDConflict {
	return &DeleteSepasctIDConflict{}
}

/*DeleteSepasctIDConflict handles this case with default header values.

Conflict
*/
type DeleteSepasctIDConflict struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdConflict  %+v", 409, o.Payload)
}

func (o *DeleteSepasctIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDTooManyRequests creates a DeleteSepasctIDTooManyRequests with default headers values
func NewDeleteSepasctIDTooManyRequests() *DeleteSepasctIDTooManyRequests {
	return &DeleteSepasctIDTooManyRequests{}
}

/*DeleteSepasctIDTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type DeleteSepasctIDTooManyRequests struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdTooManyRequests  %+v", 429, o.Payload)
}

func (o *DeleteSepasctIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDInternalServerError creates a DeleteSepasctIDInternalServerError with default headers values
func NewDeleteSepasctIDInternalServerError() *DeleteSepasctIDInternalServerError {
	return &DeleteSepasctIDInternalServerError{}
}

/*DeleteSepasctIDInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteSepasctIDInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteSepasctIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteSepasctIDServiceUnavailable creates a DeleteSepasctIDServiceUnavailable with default headers values
func NewDeleteSepasctIDServiceUnavailable() *DeleteSepasctIDServiceUnavailable {
	return &DeleteSepasctIDServiceUnavailable{}
}

/*DeleteSepasctIDServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type DeleteSepasctIDServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteSepasctIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /sepasct/{id}][%d] deleteSepasctIdServiceUnavailable  %+v", 503, o.Payload)
}

func (o *DeleteSepasctIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
