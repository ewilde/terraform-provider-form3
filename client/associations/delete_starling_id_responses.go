// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// DeleteStarlingIDReader is a Reader for the DeleteStarlingID structure.
type DeleteStarlingIDReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteStarlingIDReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 204:
		result := NewDeleteStarlingIDNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteStarlingIDBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewDeleteStarlingIDUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDeleteStarlingIDForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteStarlingIDNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteStarlingIDConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewDeleteStarlingIDTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewDeleteStarlingIDInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewDeleteStarlingIDServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteStarlingIDNoContent creates a DeleteStarlingIDNoContent with default headers values
func NewDeleteStarlingIDNoContent() *DeleteStarlingIDNoContent {
	return &DeleteStarlingIDNoContent{}
}

/* DeleteStarlingIDNoContent describes a response with status code 204, with default header values.

Association deleted
*/
type DeleteStarlingIDNoContent struct {
}

func (o *DeleteStarlingIDNoContent) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdNoContent ", 204)
}

func (o *DeleteStarlingIDNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteStarlingIDBadRequest creates a DeleteStarlingIDBadRequest with default headers values
func NewDeleteStarlingIDBadRequest() *DeleteStarlingIDBadRequest {
	return &DeleteStarlingIDBadRequest{}
}

/* DeleteStarlingIDBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type DeleteStarlingIDBadRequest struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdBadRequest  %+v", 400, o.Payload)
}
func (o *DeleteStarlingIDBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDUnauthorized creates a DeleteStarlingIDUnauthorized with default headers values
func NewDeleteStarlingIDUnauthorized() *DeleteStarlingIDUnauthorized {
	return &DeleteStarlingIDUnauthorized{}
}

/* DeleteStarlingIDUnauthorized describes a response with status code 401, with default header values.

Authentication credentials were missing or incorrect
*/
type DeleteStarlingIDUnauthorized struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdUnauthorized  %+v", 401, o.Payload)
}
func (o *DeleteStarlingIDUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDForbidden creates a DeleteStarlingIDForbidden with default headers values
func NewDeleteStarlingIDForbidden() *DeleteStarlingIDForbidden {
	return &DeleteStarlingIDForbidden{}
}

/* DeleteStarlingIDForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type DeleteStarlingIDForbidden struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDForbidden) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdForbidden  %+v", 403, o.Payload)
}
func (o *DeleteStarlingIDForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDNotFound creates a DeleteStarlingIDNotFound with default headers values
func NewDeleteStarlingIDNotFound() *DeleteStarlingIDNotFound {
	return &DeleteStarlingIDNotFound{}
}

/* DeleteStarlingIDNotFound describes a response with status code 404, with default header values.

Record not found
*/
type DeleteStarlingIDNotFound struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDNotFound) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdNotFound  %+v", 404, o.Payload)
}
func (o *DeleteStarlingIDNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDConflict creates a DeleteStarlingIDConflict with default headers values
func NewDeleteStarlingIDConflict() *DeleteStarlingIDConflict {
	return &DeleteStarlingIDConflict{}
}

/* DeleteStarlingIDConflict describes a response with status code 409, with default header values.

Conflict
*/
type DeleteStarlingIDConflict struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDConflict) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdConflict  %+v", 409, o.Payload)
}
func (o *DeleteStarlingIDConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDTooManyRequests creates a DeleteStarlingIDTooManyRequests with default headers values
func NewDeleteStarlingIDTooManyRequests() *DeleteStarlingIDTooManyRequests {
	return &DeleteStarlingIDTooManyRequests{}
}

/* DeleteStarlingIDTooManyRequests describes a response with status code 429, with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type DeleteStarlingIDTooManyRequests struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDTooManyRequests) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdTooManyRequests  %+v", 429, o.Payload)
}
func (o *DeleteStarlingIDTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDInternalServerError creates a DeleteStarlingIDInternalServerError with default headers values
func NewDeleteStarlingIDInternalServerError() *DeleteStarlingIDInternalServerError {
	return &DeleteStarlingIDInternalServerError{}
}

/* DeleteStarlingIDInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type DeleteStarlingIDInternalServerError struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdInternalServerError  %+v", 500, o.Payload)
}
func (o *DeleteStarlingIDInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteStarlingIDServiceUnavailable creates a DeleteStarlingIDServiceUnavailable with default headers values
func NewDeleteStarlingIDServiceUnavailable() *DeleteStarlingIDServiceUnavailable {
	return &DeleteStarlingIDServiceUnavailable{}
}

/* DeleteStarlingIDServiceUnavailable describes a response with status code 503, with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type DeleteStarlingIDServiceUnavailable struct {
	Payload *models.APIError
}

func (o *DeleteStarlingIDServiceUnavailable) Error() string {
	return fmt.Sprintf("[DELETE /starling/{id}][%d] deleteStarlingIdServiceUnavailable  %+v", 503, o.Payload)
}
func (o *DeleteStarlingIDServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *DeleteStarlingIDServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
