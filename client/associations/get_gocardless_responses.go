// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// GetGocardlessReader is a Reader for the GetGocardless structure.
type GetGocardlessReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGocardlessReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGocardlessOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGocardlessBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetGocardlessUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewGetGocardlessForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGocardlessNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewGetGocardlessConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewGetGocardlessTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetGocardlessInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewGetGocardlessServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGocardlessOK creates a GetGocardlessOK with default headers values
func NewGetGocardlessOK() *GetGocardlessOK {
	return &GetGocardlessOK{}
}

/* GetGocardlessOK describes a response with status code 200, with default header values.

List of gocardless associations
*/
type GetGocardlessOK struct {
	Payload *models.GocardlessAssociationListResponse
}

func (o *GetGocardlessOK) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessOK  %+v", 200, o.Payload)
}
func (o *GetGocardlessOK) GetPayload() *models.GocardlessAssociationListResponse {
	return o.Payload
}

func (o *GetGocardlessOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GocardlessAssociationListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessBadRequest creates a GetGocardlessBadRequest with default headers values
func NewGetGocardlessBadRequest() *GetGocardlessBadRequest {
	return &GetGocardlessBadRequest{}
}

/* GetGocardlessBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type GetGocardlessBadRequest struct {
	Payload *models.APIError
}

func (o *GetGocardlessBadRequest) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessBadRequest  %+v", 400, o.Payload)
}
func (o *GetGocardlessBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessUnauthorized creates a GetGocardlessUnauthorized with default headers values
func NewGetGocardlessUnauthorized() *GetGocardlessUnauthorized {
	return &GetGocardlessUnauthorized{}
}

/* GetGocardlessUnauthorized describes a response with status code 401, with default header values.

Authentication credentials were missing or incorrect
*/
type GetGocardlessUnauthorized struct {
	Payload *models.APIError
}

func (o *GetGocardlessUnauthorized) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessUnauthorized  %+v", 401, o.Payload)
}
func (o *GetGocardlessUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessForbidden creates a GetGocardlessForbidden with default headers values
func NewGetGocardlessForbidden() *GetGocardlessForbidden {
	return &GetGocardlessForbidden{}
}

/* GetGocardlessForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type GetGocardlessForbidden struct {
	Payload *models.APIError
}

func (o *GetGocardlessForbidden) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessForbidden  %+v", 403, o.Payload)
}
func (o *GetGocardlessForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessNotFound creates a GetGocardlessNotFound with default headers values
func NewGetGocardlessNotFound() *GetGocardlessNotFound {
	return &GetGocardlessNotFound{}
}

/* GetGocardlessNotFound describes a response with status code 404, with default header values.

Record not found
*/
type GetGocardlessNotFound struct {
	Payload *models.APIError
}

func (o *GetGocardlessNotFound) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessNotFound  %+v", 404, o.Payload)
}
func (o *GetGocardlessNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessConflict creates a GetGocardlessConflict with default headers values
func NewGetGocardlessConflict() *GetGocardlessConflict {
	return &GetGocardlessConflict{}
}

/* GetGocardlessConflict describes a response with status code 409, with default header values.

Conflict
*/
type GetGocardlessConflict struct {
	Payload *models.APIError
}

func (o *GetGocardlessConflict) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessConflict  %+v", 409, o.Payload)
}
func (o *GetGocardlessConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessTooManyRequests creates a GetGocardlessTooManyRequests with default headers values
func NewGetGocardlessTooManyRequests() *GetGocardlessTooManyRequests {
	return &GetGocardlessTooManyRequests{}
}

/* GetGocardlessTooManyRequests describes a response with status code 429, with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type GetGocardlessTooManyRequests struct {
	Payload *models.APIError
}

func (o *GetGocardlessTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessTooManyRequests  %+v", 429, o.Payload)
}
func (o *GetGocardlessTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessInternalServerError creates a GetGocardlessInternalServerError with default headers values
func NewGetGocardlessInternalServerError() *GetGocardlessInternalServerError {
	return &GetGocardlessInternalServerError{}
}

/* GetGocardlessInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type GetGocardlessInternalServerError struct {
	Payload *models.APIError
}

func (o *GetGocardlessInternalServerError) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessInternalServerError  %+v", 500, o.Payload)
}
func (o *GetGocardlessInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGocardlessServiceUnavailable creates a GetGocardlessServiceUnavailable with default headers values
func NewGetGocardlessServiceUnavailable() *GetGocardlessServiceUnavailable {
	return &GetGocardlessServiceUnavailable{}
}

/* GetGocardlessServiceUnavailable describes a response with status code 503, with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type GetGocardlessServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetGocardlessServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /gocardless][%d] getGocardlessServiceUnavailable  %+v", 503, o.Payload)
}
func (o *GetGocardlessServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *GetGocardlessServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
