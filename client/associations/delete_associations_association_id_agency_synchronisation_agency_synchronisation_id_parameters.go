// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams creates a new DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams object
// with the default values initialized.
func NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams() *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	var ()
	return &DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParamsWithTimeout creates a new DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParamsWithTimeout(timeout time.Duration) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	var ()
	return &DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams{

		timeout: timeout,
	}
}

// NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParamsWithContext creates a new DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParamsWithContext(ctx context.Context) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	var ()
	return &DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams{

		Context: ctx,
	}
}

// NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParamsWithHTTPClient creates a new DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParamsWithHTTPClient(client *http.Client) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	var ()
	return &DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams{
		HTTPClient: client,
	}
}

/*DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams contains all the parameters to send to the API endpoint
for the delete associations association ID agency synchronisation agency synchronisation ID operation typically these are written to a http.Request
*/
type DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams struct {

	/*AgencySynchronisationID
	  Agency synchronisation details Id

	*/
	AgencySynchronisationID strfmt.UUID
	/*AssociationID
	  Association Id

	*/
	AssociationID strfmt.UUID
	/*Version
	  Version

	*/
	Version int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WithTimeout(timeout time.Duration) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WithContext(ctx context.Context) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WithHTTPClient(client *http.Client) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAgencySynchronisationID adds the agencySynchronisationID to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WithAgencySynchronisationID(agencySynchronisationID strfmt.UUID) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	o.SetAgencySynchronisationID(agencySynchronisationID)
	return o
}

// SetAgencySynchronisationID adds the agencySynchronisationId to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) SetAgencySynchronisationID(agencySynchronisationID strfmt.UUID) {
	o.AgencySynchronisationID = agencySynchronisationID
}

// WithAssociationID adds the associationID to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WithAssociationID(associationID strfmt.UUID) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	o.SetAssociationID(associationID)
	return o
}

// SetAssociationID adds the associationId to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) SetAssociationID(associationID strfmt.UUID) {
	o.AssociationID = associationID
}

// WithVersion adds the version to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WithVersion(version int64) *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams {
	o.SetVersion(version)
	return o
}

// SetVersion adds the version to the delete associations association ID agency synchronisation agency synchronisation ID params
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) SetVersion(version int64) {
	o.Version = version
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteAssociationsAssociationIDAgencySynchronisationAgencySynchronisationIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param agencySynchronisationId
	if err := r.SetPathParam("agencySynchronisationId", o.AgencySynchronisationID.String()); err != nil {
		return err
	}

	// path param associationId
	if err := r.SetPathParam("associationId", o.AssociationID.String()); err != nil {
		return err
	}

	// query param version
	qrVersion := o.Version
	qVersion := swag.FormatInt64(qrVersion)
	if qVersion != "" {
		if err := r.SetQueryParam("version", qVersion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
