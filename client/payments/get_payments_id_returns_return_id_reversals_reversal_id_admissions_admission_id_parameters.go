// Code generated by go-swagger; DO NOT EDIT.

package payments

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams creates a new GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams object
// with the default values initialized.
func NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams() *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	var ()
	return &GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParamsWithTimeout creates a new GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParamsWithTimeout(timeout time.Duration) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	var ()
	return &GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams{

		timeout: timeout,
	}
}

// NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParamsWithContext creates a new GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParamsWithContext(ctx context.Context) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	var ()
	return &GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams{

		Context: ctx,
	}
}

// NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParamsWithHTTPClient creates a new GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParamsWithHTTPClient(client *http.Client) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	var ()
	return &GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams{
		HTTPClient: client,
	}
}

/*GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams contains all the parameters to send to the API endpoint
for the get payments ID returns return ID reversals reversal ID admissions admission ID operation typically these are written to a http.Request
*/
type GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams struct {

	/*AdmissionID
	  Admission Id

	*/
	AdmissionID strfmt.UUID
	/*ID
	  Payment Id

	*/
	ID strfmt.UUID
	/*ReturnID
	  Return Id

	*/
	ReturnID strfmt.UUID
	/*ReversalID
	  Reversal Id

	*/
	ReversalID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithTimeout(timeout time.Duration) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithContext(ctx context.Context) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithHTTPClient(client *http.Client) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAdmissionID adds the admissionID to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithAdmissionID(admissionID strfmt.UUID) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetAdmissionID(admissionID)
	return o
}

// SetAdmissionID adds the admissionId to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetAdmissionID(admissionID strfmt.UUID) {
	o.AdmissionID = admissionID
}

// WithID adds the id to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithID(id strfmt.UUID) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetID(id)
	return o
}

// SetID adds the id to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetID(id strfmt.UUID) {
	o.ID = id
}

// WithReturnID adds the returnID to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithReturnID(returnID strfmt.UUID) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetReturnID(returnID)
	return o
}

// SetReturnID adds the returnId to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetReturnID(returnID strfmt.UUID) {
	o.ReturnID = returnID
}

// WithReversalID adds the reversalID to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WithReversalID(reversalID strfmt.UUID) *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams {
	o.SetReversalID(reversalID)
	return o
}

// SetReversalID adds the reversalId to the get payments ID returns return ID reversals reversal ID admissions admission ID params
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) SetReversalID(reversalID strfmt.UUID) {
	o.ReversalID = reversalID
}

// WriteToRequest writes these params to a swagger request
func (o *GetPaymentsIDReturnsReturnIDReversalsReversalIDAdmissionsAdmissionIDParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param admissionId
	if err := r.SetPathParam("admissionId", o.AdmissionID.String()); err != nil {
		return err
	}

	// path param id
	if err := r.SetPathParam("id", o.ID.String()); err != nil {
		return err
	}

	// path param returnId
	if err := r.SetPathParam("returnId", o.ReturnID.String()); err != nil {
		return err
	}

	// path param reversalId
	if err := r.SetPathParam("reversalId", o.ReversalID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
