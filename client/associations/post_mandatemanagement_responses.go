// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostMandatemanagementReader is a Reader for the PostMandatemanagement structure.
type PostMandatemanagementReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostMandatemanagementReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostMandatemanagementCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostMandatemanagementBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostMandatemanagementUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostMandatemanagementForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostMandatemanagementNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostMandatemanagementConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostMandatemanagementTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostMandatemanagementInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostMandatemanagementServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostMandatemanagementCreated creates a PostMandatemanagementCreated with default headers values
func NewPostMandatemanagementCreated() *PostMandatemanagementCreated {
	return &PostMandatemanagementCreated{}
}

/*PostMandatemanagementCreated handles this case with default header values.

Mandate management configuration creation response
*/
type PostMandatemanagementCreated struct {
	Payload *models.MandateManagementAssociationDetailsResponse
}

func (o *PostMandatemanagementCreated) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementCreated  %+v", 201, o.Payload)
}

func (o *PostMandatemanagementCreated) GetPayload() *models.MandateManagementAssociationDetailsResponse {
	return o.Payload
}

func (o *PostMandatemanagementCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.MandateManagementAssociationDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementBadRequest creates a PostMandatemanagementBadRequest with default headers values
func NewPostMandatemanagementBadRequest() *PostMandatemanagementBadRequest {
	return &PostMandatemanagementBadRequest{}
}

/*PostMandatemanagementBadRequest handles this case with default header values.

Bad Request
*/
type PostMandatemanagementBadRequest struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementBadRequest) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementBadRequest  %+v", 400, o.Payload)
}

func (o *PostMandatemanagementBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementUnauthorized creates a PostMandatemanagementUnauthorized with default headers values
func NewPostMandatemanagementUnauthorized() *PostMandatemanagementUnauthorized {
	return &PostMandatemanagementUnauthorized{}
}

/*PostMandatemanagementUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type PostMandatemanagementUnauthorized struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementUnauthorized) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementUnauthorized  %+v", 401, o.Payload)
}

func (o *PostMandatemanagementUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementForbidden creates a PostMandatemanagementForbidden with default headers values
func NewPostMandatemanagementForbidden() *PostMandatemanagementForbidden {
	return &PostMandatemanagementForbidden{}
}

/*PostMandatemanagementForbidden handles this case with default header values.

Forbidden
*/
type PostMandatemanagementForbidden struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementForbidden) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementForbidden  %+v", 403, o.Payload)
}

func (o *PostMandatemanagementForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementNotFound creates a PostMandatemanagementNotFound with default headers values
func NewPostMandatemanagementNotFound() *PostMandatemanagementNotFound {
	return &PostMandatemanagementNotFound{}
}

/*PostMandatemanagementNotFound handles this case with default header values.

Record not found
*/
type PostMandatemanagementNotFound struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementNotFound) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementNotFound  %+v", 404, o.Payload)
}

func (o *PostMandatemanagementNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementConflict creates a PostMandatemanagementConflict with default headers values
func NewPostMandatemanagementConflict() *PostMandatemanagementConflict {
	return &PostMandatemanagementConflict{}
}

/*PostMandatemanagementConflict handles this case with default header values.

Conflict
*/
type PostMandatemanagementConflict struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementConflict) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementConflict  %+v", 409, o.Payload)
}

func (o *PostMandatemanagementConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementTooManyRequests creates a PostMandatemanagementTooManyRequests with default headers values
func NewPostMandatemanagementTooManyRequests() *PostMandatemanagementTooManyRequests {
	return &PostMandatemanagementTooManyRequests{}
}

/*PostMandatemanagementTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type PostMandatemanagementTooManyRequests struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostMandatemanagementTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementInternalServerError creates a PostMandatemanagementInternalServerError with default headers values
func NewPostMandatemanagementInternalServerError() *PostMandatemanagementInternalServerError {
	return &PostMandatemanagementInternalServerError{}
}

/*PostMandatemanagementInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostMandatemanagementInternalServerError struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementInternalServerError) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementInternalServerError  %+v", 500, o.Payload)
}

func (o *PostMandatemanagementInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostMandatemanagementServiceUnavailable creates a PostMandatemanagementServiceUnavailable with default headers values
func NewPostMandatemanagementServiceUnavailable() *PostMandatemanagementServiceUnavailable {
	return &PostMandatemanagementServiceUnavailable{}
}

/*PostMandatemanagementServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type PostMandatemanagementServiceUnavailable struct {
	Payload *models.APIError
}

func (o *PostMandatemanagementServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /mandatemanagement][%d] postMandatemanagementServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostMandatemanagementServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostMandatemanagementServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
