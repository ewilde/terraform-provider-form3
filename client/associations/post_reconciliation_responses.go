// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostReconciliationReader is a Reader for the PostReconciliation structure.
type PostReconciliationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostReconciliationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPostReconciliationCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPostReconciliationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewPostReconciliationUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewPostReconciliationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewPostReconciliationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewPostReconciliationConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 429:
		result := NewPostReconciliationTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPostReconciliationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPostReconciliationServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPostReconciliationCreated creates a PostReconciliationCreated with default headers values
func NewPostReconciliationCreated() *PostReconciliationCreated {
	return &PostReconciliationCreated{}
}

/* PostReconciliationCreated describes a response with status code 201, with default header values.

creation response
*/
type PostReconciliationCreated struct {
	Payload *models.ReconciliationAssociationDetailsResponse
}

func (o *PostReconciliationCreated) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationCreated  %+v", 201, o.Payload)
}
func (o *PostReconciliationCreated) GetPayload() *models.ReconciliationAssociationDetailsResponse {
	return o.Payload
}

func (o *PostReconciliationCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ReconciliationAssociationDetailsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationBadRequest creates a PostReconciliationBadRequest with default headers values
func NewPostReconciliationBadRequest() *PostReconciliationBadRequest {
	return &PostReconciliationBadRequest{}
}

/* PostReconciliationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type PostReconciliationBadRequest struct {
	Payload *models.APIError
}

func (o *PostReconciliationBadRequest) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationBadRequest  %+v", 400, o.Payload)
}
func (o *PostReconciliationBadRequest) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationUnauthorized creates a PostReconciliationUnauthorized with default headers values
func NewPostReconciliationUnauthorized() *PostReconciliationUnauthorized {
	return &PostReconciliationUnauthorized{}
}

/* PostReconciliationUnauthorized describes a response with status code 401, with default header values.

Authentication credentials were missing or incorrect
*/
type PostReconciliationUnauthorized struct {
	Payload *models.APIError
}

func (o *PostReconciliationUnauthorized) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationUnauthorized  %+v", 401, o.Payload)
}
func (o *PostReconciliationUnauthorized) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationForbidden creates a PostReconciliationForbidden with default headers values
func NewPostReconciliationForbidden() *PostReconciliationForbidden {
	return &PostReconciliationForbidden{}
}

/* PostReconciliationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type PostReconciliationForbidden struct {
	Payload *models.APIError
}

func (o *PostReconciliationForbidden) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationForbidden  %+v", 403, o.Payload)
}
func (o *PostReconciliationForbidden) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationNotFound creates a PostReconciliationNotFound with default headers values
func NewPostReconciliationNotFound() *PostReconciliationNotFound {
	return &PostReconciliationNotFound{}
}

/* PostReconciliationNotFound describes a response with status code 404, with default header values.

Record not found
*/
type PostReconciliationNotFound struct {
	Payload *models.APIError
}

func (o *PostReconciliationNotFound) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationNotFound  %+v", 404, o.Payload)
}
func (o *PostReconciliationNotFound) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationConflict creates a PostReconciliationConflict with default headers values
func NewPostReconciliationConflict() *PostReconciliationConflict {
	return &PostReconciliationConflict{}
}

/* PostReconciliationConflict describes a response with status code 409, with default header values.

Conflict
*/
type PostReconciliationConflict struct {
	Payload *models.APIError
}

func (o *PostReconciliationConflict) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationConflict  %+v", 409, o.Payload)
}
func (o *PostReconciliationConflict) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationTooManyRequests creates a PostReconciliationTooManyRequests with default headers values
func NewPostReconciliationTooManyRequests() *PostReconciliationTooManyRequests {
	return &PostReconciliationTooManyRequests{}
}

/* PostReconciliationTooManyRequests describes a response with status code 429, with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type PostReconciliationTooManyRequests struct {
	Payload *models.APIError
}

func (o *PostReconciliationTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationTooManyRequests  %+v", 429, o.Payload)
}
func (o *PostReconciliationTooManyRequests) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationInternalServerError creates a PostReconciliationInternalServerError with default headers values
func NewPostReconciliationInternalServerError() *PostReconciliationInternalServerError {
	return &PostReconciliationInternalServerError{}
}

/* PostReconciliationInternalServerError describes a response with status code 500, with default header values.

Internal Server Error
*/
type PostReconciliationInternalServerError struct {
	Payload *models.APIError
}

func (o *PostReconciliationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationInternalServerError  %+v", 500, o.Payload)
}
func (o *PostReconciliationInternalServerError) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostReconciliationServiceUnavailable creates a PostReconciliationServiceUnavailable with default headers values
func NewPostReconciliationServiceUnavailable() *PostReconciliationServiceUnavailable {
	return &PostReconciliationServiceUnavailable{}
}

/* PostReconciliationServiceUnavailable describes a response with status code 503, with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type PostReconciliationServiceUnavailable struct {
	Payload *models.APIError
}

func (o *PostReconciliationServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /reconciliation][%d] postReconciliationServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PostReconciliationServiceUnavailable) GetPayload() *models.APIError {
	return o.Payload
}

func (o *PostReconciliationServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
