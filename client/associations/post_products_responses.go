// Code generated by go-swagger; DO NOT EDIT.

package associations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech-oss/terraform-provider-form3/models"
)

// PostProductsReader is a Reader for the PostProducts structure.
type PostProductsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostProductsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostProductsCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostProductsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPostProductsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPostProductsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPostProductsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPostProductsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewPostProductsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPostProductsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewPostProductsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostProductsCreated creates a PostProductsCreated with default headers values
func NewPostProductsCreated() *PostProductsCreated {
	return &PostProductsCreated{}
}

/*PostProductsCreated handles this case with default header values.

creation response
*/
type PostProductsCreated struct {
	Payload *models.ProductsAssociationCreationResponse
}

func (o *PostProductsCreated) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsCreated  %+v", 201, o.Payload)
}

func (o *PostProductsCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ProductsAssociationCreationResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsBadRequest creates a PostProductsBadRequest with default headers values
func NewPostProductsBadRequest() *PostProductsBadRequest {
	return &PostProductsBadRequest{}
}

/*PostProductsBadRequest handles this case with default header values.

Bad Request
*/
type PostProductsBadRequest struct {
	Payload *models.APIError
}

func (o *PostProductsBadRequest) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsBadRequest  %+v", 400, o.Payload)
}

func (o *PostProductsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsUnauthorized creates a PostProductsUnauthorized with default headers values
func NewPostProductsUnauthorized() *PostProductsUnauthorized {
	return &PostProductsUnauthorized{}
}

/*PostProductsUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type PostProductsUnauthorized struct {
	Payload *models.APIError
}

func (o *PostProductsUnauthorized) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsUnauthorized  %+v", 401, o.Payload)
}

func (o *PostProductsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsForbidden creates a PostProductsForbidden with default headers values
func NewPostProductsForbidden() *PostProductsForbidden {
	return &PostProductsForbidden{}
}

/*PostProductsForbidden handles this case with default header values.

Forbidden
*/
type PostProductsForbidden struct {
	Payload *models.APIError
}

func (o *PostProductsForbidden) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsForbidden  %+v", 403, o.Payload)
}

func (o *PostProductsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsNotFound creates a PostProductsNotFound with default headers values
func NewPostProductsNotFound() *PostProductsNotFound {
	return &PostProductsNotFound{}
}

/*PostProductsNotFound handles this case with default header values.

Record not found
*/
type PostProductsNotFound struct {
	Payload *models.APIError
}

func (o *PostProductsNotFound) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsNotFound  %+v", 404, o.Payload)
}

func (o *PostProductsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsConflict creates a PostProductsConflict with default headers values
func NewPostProductsConflict() *PostProductsConflict {
	return &PostProductsConflict{}
}

/*PostProductsConflict handles this case with default header values.

Conflict
*/
type PostProductsConflict struct {
	Payload *models.APIError
}

func (o *PostProductsConflict) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsConflict  %+v", 409, o.Payload)
}

func (o *PostProductsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsTooManyRequests creates a PostProductsTooManyRequests with default headers values
func NewPostProductsTooManyRequests() *PostProductsTooManyRequests {
	return &PostProductsTooManyRequests{}
}

/*PostProductsTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type PostProductsTooManyRequests struct {
	Payload *models.APIError
}

func (o *PostProductsTooManyRequests) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsTooManyRequests  %+v", 429, o.Payload)
}

func (o *PostProductsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsInternalServerError creates a PostProductsInternalServerError with default headers values
func NewPostProductsInternalServerError() *PostProductsInternalServerError {
	return &PostProductsInternalServerError{}
}

/*PostProductsInternalServerError handles this case with default header values.

Internal Server Error
*/
type PostProductsInternalServerError struct {
	Payload *models.APIError
}

func (o *PostProductsInternalServerError) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsInternalServerError  %+v", 500, o.Payload)
}

func (o *PostProductsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPostProductsServiceUnavailable creates a PostProductsServiceUnavailable with default headers values
func NewPostProductsServiceUnavailable() *PostProductsServiceUnavailable {
	return &PostProductsServiceUnavailable{}
}

/*PostProductsServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type PostProductsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *PostProductsServiceUnavailable) Error() string {
	return fmt.Sprintf("[POST /products][%d] postProductsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *PostProductsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
