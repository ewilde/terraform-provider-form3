// Code generated by go-swagger; DO NOT EDIT.

package account_routings

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/form3tech-oss/terraform-provider-form3/models"
)

// GetAccountRoutingsReader is a Reader for the GetAccountRoutings structure.
type GetAccountRoutingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAccountRoutingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetAccountRoutingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetAccountRoutingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAccountRoutingsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetAccountRoutingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetAccountRoutingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewGetAccountRoutingsConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 429:
		result := NewGetAccountRoutingsTooManyRequests()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetAccountRoutingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 503:
		result := NewGetAccountRoutingsServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAccountRoutingsOK creates a GetAccountRoutingsOK with default headers values
func NewGetAccountRoutingsOK() *GetAccountRoutingsOK {
	return &GetAccountRoutingsOK{}
}

/*GetAccountRoutingsOK handles this case with default header values.

List of account routing details
*/
type GetAccountRoutingsOK struct {
	Payload *models.AccountRoutingDetailsListResponse
}

func (o *GetAccountRoutingsOK) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsOK  %+v", 200, o.Payload)
}

func (o *GetAccountRoutingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AccountRoutingDetailsListResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsBadRequest creates a GetAccountRoutingsBadRequest with default headers values
func NewGetAccountRoutingsBadRequest() *GetAccountRoutingsBadRequest {
	return &GetAccountRoutingsBadRequest{}
}

/*GetAccountRoutingsBadRequest handles this case with default header values.

Bad Request
*/
type GetAccountRoutingsBadRequest struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsBadRequest  %+v", 400, o.Payload)
}

func (o *GetAccountRoutingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsUnauthorized creates a GetAccountRoutingsUnauthorized with default headers values
func NewGetAccountRoutingsUnauthorized() *GetAccountRoutingsUnauthorized {
	return &GetAccountRoutingsUnauthorized{}
}

/*GetAccountRoutingsUnauthorized handles this case with default header values.

Authentication credentials were missing or incorrect
*/
type GetAccountRoutingsUnauthorized struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsUnauthorized  %+v", 401, o.Payload)
}

func (o *GetAccountRoutingsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsForbidden creates a GetAccountRoutingsForbidden with default headers values
func NewGetAccountRoutingsForbidden() *GetAccountRoutingsForbidden {
	return &GetAccountRoutingsForbidden{}
}

/*GetAccountRoutingsForbidden handles this case with default header values.

Forbidden
*/
type GetAccountRoutingsForbidden struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsForbidden) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsForbidden  %+v", 403, o.Payload)
}

func (o *GetAccountRoutingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsNotFound creates a GetAccountRoutingsNotFound with default headers values
func NewGetAccountRoutingsNotFound() *GetAccountRoutingsNotFound {
	return &GetAccountRoutingsNotFound{}
}

/*GetAccountRoutingsNotFound handles this case with default header values.

Record not found
*/
type GetAccountRoutingsNotFound struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsNotFound) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsNotFound  %+v", 404, o.Payload)
}

func (o *GetAccountRoutingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsConflict creates a GetAccountRoutingsConflict with default headers values
func NewGetAccountRoutingsConflict() *GetAccountRoutingsConflict {
	return &GetAccountRoutingsConflict{}
}

/*GetAccountRoutingsConflict handles this case with default header values.

Conflict
*/
type GetAccountRoutingsConflict struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsConflict) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsConflict  %+v", 409, o.Payload)
}

func (o *GetAccountRoutingsConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsTooManyRequests creates a GetAccountRoutingsTooManyRequests with default headers values
func NewGetAccountRoutingsTooManyRequests() *GetAccountRoutingsTooManyRequests {
	return &GetAccountRoutingsTooManyRequests{}
}

/*GetAccountRoutingsTooManyRequests handles this case with default header values.

The request cannot be served due to the applicationâ€™s rate limit
*/
type GetAccountRoutingsTooManyRequests struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsTooManyRequests) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsTooManyRequests  %+v", 429, o.Payload)
}

func (o *GetAccountRoutingsTooManyRequests) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsInternalServerError creates a GetAccountRoutingsInternalServerError with default headers values
func NewGetAccountRoutingsInternalServerError() *GetAccountRoutingsInternalServerError {
	return &GetAccountRoutingsInternalServerError{}
}

/*GetAccountRoutingsInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetAccountRoutingsInternalServerError struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsInternalServerError  %+v", 500, o.Payload)
}

func (o *GetAccountRoutingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAccountRoutingsServiceUnavailable creates a GetAccountRoutingsServiceUnavailable with default headers values
func NewGetAccountRoutingsServiceUnavailable() *GetAccountRoutingsServiceUnavailable {
	return &GetAccountRoutingsServiceUnavailable{}
}

/*GetAccountRoutingsServiceUnavailable handles this case with default header values.

The server is up, but overloaded with requests. Try again later.
*/
type GetAccountRoutingsServiceUnavailable struct {
	Payload *models.APIError
}

func (o *GetAccountRoutingsServiceUnavailable) Error() string {
	return fmt.Sprintf("[GET /account_routings][%d] getAccountRoutingsServiceUnavailable  %+v", 503, o.Payload)
}

func (o *GetAccountRoutingsServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.APIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
