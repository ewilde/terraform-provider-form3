// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// LhvAssociationAttributes lhv association attributes
//
// swagger:model LhvAssociationAttributes
type LhvAssociationAttributes struct {

	// client code
	// Required: true
	// Min Length: 1
	ClientCode string `json:"client_code"`

	// client country
	// Required: true
	// Min Length: 1
	ClientCountry string `json:"client_country"`

	// name
	// Required: true
	// Min Length: 1
	Name string `json:"name"`

	// use simulator
	UseSimulator bool `json:"use_simulator,omitempty"`
}

// Validate validates this lhv association attributes
func (m *LhvAssociationAttributes) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateClientCode(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateClientCountry(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *LhvAssociationAttributes) validateClientCode(formats strfmt.Registry) error {

	if err := validate.RequiredString("client_code", "body", string(m.ClientCode)); err != nil {
		return err
	}

	if err := validate.MinLength("client_code", "body", string(m.ClientCode), 1); err != nil {
		return err
	}

	return nil
}

func (m *LhvAssociationAttributes) validateClientCountry(formats strfmt.Registry) error {

	if err := validate.RequiredString("client_country", "body", string(m.ClientCountry)); err != nil {
		return err
	}

	if err := validate.MinLength("client_country", "body", string(m.ClientCountry), 1); err != nil {
		return err
	}

	return nil
}

func (m *LhvAssociationAttributes) validateName(formats strfmt.Registry) error {

	if err := validate.RequiredString("name", "body", string(m.Name)); err != nil {
		return err
	}

	if err := validate.MinLength("name", "body", string(m.Name), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *LhvAssociationAttributes) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *LhvAssociationAttributes) UnmarshalBinary(b []byte) error {
	var res LhvAssociationAttributes
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
